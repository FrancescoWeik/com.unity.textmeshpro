{
  "name": "com.unity.textmeshpro",
  "displayName": "TextMeshPro",
  "version": "4.0.0-pre.2",
  "unity": "2022.2",
  "description": "*** READ BEFORE UPGRADING ***\n---------------------------------\nThis preview version of the TextMeshPro package is for users seeking to use both UI Toolkit and TextMeshPro in the same project.\n\nDO NOT UPGRADE to this new release unless you are planning on using UI Toolkit and sharing resources between TMP and UITK.\n\nThis new release uses new asset types that are no longer included in the package and now instead included with the Unity Editor itself. As such, you will no longer have access to the source code for these assets, editors and other related script files.\n\nIn order to share resources between TMP and UITK, existing TMP resources such as TMP_FontAssets, TMP_SpriteAssets, and other TMP assets will need to be converted to these new internal asset types along with remapping of their GUID.\n\nAll scripts and project files referencing these TMP assets will be updated via the Unity API Updater. Since these changes cannot be undone, please BE SURE TO BACKUP YOUR PROJECT before updating to this new release.\n\nOnce the Unity API Updater has run, you will need to restart the Unity editor for this asset migration process to complete.\n\nTMP Essential Resources and TMP Examples & Extras have been updated in this release and should be re-imported.\n\n--------------------\n\nTextMeshPro is the ultimate text solution for Unity. It's the perfect replacement for Unity's UI Text and the legacy Text Mesh.\n\nPowerful and easy to use, TextMeshPro (also known as TMP) uses Advanced Text Rendering techniques along with a set of custom shaders; delivering substantial visual quality improvements while giving users incredible flexibility when it comes to text styling and texturing.\n\nTextMeshPro provides Improved Control over text formatting and layout with features like character, word, line and paragraph spacing, kerning, justified text, Links, over 30 Rich Text Tags available, support for Multi Font & Sprites, Custom Styles and more.\n\nGreat performance. Since the geometry created by TextMeshPro uses two triangles per character just like Unity's text components, this improved visual quality and flexibility comes at no additional performance cost.",
  "keywords": [
    "TextMeshPro",
    "TextMesh Pro",
    "TMP",
    "Text",
    "SDF"
  ],
  "category": "Text Rendering",
  "dependencies": {
    "com.unity.ugui": "1.0.0"
  },
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.textmeshpro.git",
    "type": "git",
    "revision": "6d0a09b6e0f878dc99a38a9ce154c503c60dd3a2"
  },
  "_upm": {
    "changelog": "### Changes\n- Fixed italic horizontal displacement of punctuation. (TMPB-133)\n- Updated Input Field to not restore the original text when the X in the HoloLens keyboard is pressed.\n- Fixed MissingReferenceException when changing scenes. See case [TMPB-120](https://issuetracker.unity3d.com/issues/missingreferenceexception-thrown-when-changing-scenes) and forum [thread](https://forum.unity.com/threads/tmpro-submeshui-error-when-changing-scenes.1129724/) for more info.\n- Fixed Undo operation not correctly undoing some newly created TMP objects. Case #1400391\n- Fixed glyphs not being drawn in the various font asset inspector tables although present in the glyph table until unselecting and re-selecting the font asset.\n- Fixed incorrect line breaking when using a mixture of Latin and CJK text.\n- Fixed potential NullReferenceException when creating font asset with multiple atlas textures. See [forum post](https://forum.unity.com/threads/how-can-i-submit-bugs-or-issues-for-tmp.628687/#post-8186100) for details.\n- Fixed potential issue when using the &lt;mark&gt; tag in conjunction with Ellipsis.\n- Added new \"Get Font Features\" option in the Generation Settings of Font Assets to provide control over fetching of font feature data.\n- Fix potential duplication of Ligature data when using Dynamic Font Assets.\n- Added new \"duospace\" attribute to the &lt;mspace=value&gt; markup tag where the spacing of the '.', ':' and ',' characters will be half of the value. This was added as an option when displaying numerical values using this markup tag.\n- With the addition of support for new OpenType Layout features such as Ligatures, Mark-to-Base and Mark-to-Mark, we have made the following changes:\n  - The \"Kerning\" option in the Extra Settings of the text component inspector has been replaced by a new popup menu to independently control these features which are \"kern\", \"liga\", \"mark\" and \"mkmk\"\n  - The \"enableKerning\" property has been deprecated and replaced by the \"fontFeatures\" property which is a list that contains which features are enabled on the text component.\n- Fixed two potential NullReferenceException related to missing material references or materials on SubMesh text objects. See [forum post](https://forum.unity.com/threads/tmpro-submeshui-error-when-changing-scenes.1129724/#post-8462771) for details.\n- Fixed for text alignment mode Justified and Flush blending not working correctly when using &lt;NBSP&gt; in the text.\n- Fixed external keyboard on iOS/tvOS and Android when Hide Soft Keyboard is used\n- - Fixed a potential IndexOutOfRangeException when trying to select any portions of text in an Input Field whose child text component is using Overflow mode Truncate or Ellipsis where due to RectTransform width and / or height restrictions have results in the text being fully truncated. Case #1361032 \n- Fixed incorrect character sequencing in the Input Field when using Japanese IME in UWP builds. Case #1374755\n- Fixed several potential IndexOutOfRangeException in the Input Field when text is fully truncated when using Text Overflow mode Ellipsis or Truncate.\n- Fixed Input Field incorrect caretPosition and / or stringPosition properties when updating these via scripting. Case #1334622\n- Fixed incorrect event handling on UWP and Hololens 2. Case #1357718 and Case #1351006\n- Fixed Input Field OnSelect event potentially firing twice on some mobile devices including Microsoft Surfaces.\n- Fixed Input Field incorrect caret insertion position when text contains a Carriage Return &lt;CR&gt; at the end of a line. Case #1362068\n- Added support for &lt;CR&gt; markup tag.\n- Added value range check for the text component margins located in the text component extra settings. Case #1365554\n- Added new overload to the TMP_FontAsset.CreateFontAsset() to enable creating font asset instances using a file path.\n- Added new TMP_ResourceManager.RemoveFontAsset() function to remove a font asset from the TMP Resource Manager. This new function would typically be used prior to unloading bundles and / or resources.\n- Warnings about potentially missing character 0x5F used to display underline or strikethrough will only be displayed when using those features when Display Warning is enabled in the TMP Settings.\n- Fixed incorrect handling of '-' at the end of a line when using Text Overflow Page mode. Case #1382173\n- Fixed incorrect line breaking when a hyphen '-' is preceded by a space. Case #1391990\n- When using Text Wrapping Mode - Preserve White Space or Preserve White Space No Wrap, the &lt;ZWSP&gt; character will now contribute to the preferred height when it is the first and only character on a new line.\n- Added ClearFontAssetGlyphCache() function to the TMP_ResourcesManager to enable clearing the font asset fallback glyph cache.\n- Added new &lt;ZWJ&gt; markup tag.\n- Added ability to define a list of fallback text assets in the TMP Settings to be used for Emojis.\n- Added new property \"emojiFallbackSupport\" to text components which is also exposed in the extra settings section of the text component inspector. When enabled, this will prioritize searching the Emoji Fallback Text Assets before the primary font asset for characters defined as Emoji in Unicode 14.0. See [forum post](https://forum.unity.com/threads/fallback-to-emojis-before-fonts.1186174/) for details.\n- Fixed duplicated character when using custom validator in conjunction with soft keyboard. Case #1387772\n- The &lt;noparse&gt; markup tag will now also affect inline markup tags like &lt;br&gt;, &lt;shy&gt;, etc.\n- Fixed newly created StyleSheets having two Normal styles.\n- Added new Double Pass SDF shader and example scene to the TMP Examples & Extras to showcase this new shader.\n- Added new context menu option to manually \"clear dynamic data\" of a dynamic font asset. This performs the same clearing of data as the \"Clear Dynamic Data on Build\" option when manually triggered.\n- Added new &lt;a href=\"url\"&gt; markup tag which can be used as follows: \"See &lt;a href=\"http://url...\"&gt;this link&lt;/a&gt; for details.\". This new markup tag is similar to the &lt;link&gt; tag but does not use an ID.\n- Added new \"A\" style to the Default Style Sheet referenced in the TMP Settings. This \"A\" style defines the styling of the new &lt;a&gt; markup tag.\n- The TMP_Text.parseCtrlCharacters property which controls the interpretation and parsing of escape characters in the text component's Text Input box in the inspector, will now apply to all methods of setting the text on the component. Case #1400008\n- Fixed potential Null Reference Exception when editing the name of a sprite character. Case #1396591\n- Fixed issue where TMP_FontAsset.HasCharacters would return false when called prior to font asset initialization. Case #1394817\n- Minor TMP_InputField UI improvement where \"Hide Mobile Input\" property will be disabled when \"Hide Soft Keyboard\" property is disabled. Case #1388243"
  },
  "upmCi": {
    "footprint": "ab867dd64388a514ec4832de84efc0c56ec0d7d2"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/index.html"
}
